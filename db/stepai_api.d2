# StepAI API Database Schema - AI 전문가 매칭 서비스

# Users 테이블 (일반 사용자)
users: {
  shape: sql_table
  id: int {constraint: primary_key}
  username: varchar(50) 
  email: varchar(100) {constraint: unique}
  password_hash: varchar(255)
  user_type: varchar(20) # client, expert, admin
  user_status: varchar(20) # active, inactive, pending, deleted
  deleted_at: timestamp
  created_at: timestamp
  updated_at: timestamp
}

# Groups 테이블 (전문가 그룹)
groups: {
  shape: sql_table
  id: int {constraint: primary_key}
  group_name: varchar(100)
  group_description: text
  group_logo: varchar(255)
  group_website: varchar(255)
  group_email: varchar(100)
  group_phone: varchar(20)
  group_address: varchar(255)
  group_status: varchar(20) # active, inactive, pending, deleted
  deleted_at: timestamp
  created_at: timestamp
  updated_at: timestamp
}

# Experts 테이블 (AI 전문가)
experts: {
  shape: sql_table
  id: int {constraint: primary_key}
  user_id: int {constraint: foreign_key}
  group_id: int {constraint: foreign_key}
  expert_name: varchar(100)
  expert_title: varchar(100)
  expert_bio: text
  expert_avatar: varchar(255)
  expert_website: varchar(255)
  expert_email: varchar(100)
  expert_phone: varchar(20)
  expert_location: varchar(255)
  expert_status: varchar(20) # active, inactive, pending, deleted
  deleted_at: timestamp
  created_at: timestamp
  updated_at: timestamp
}

# AI Services 테이블 (AI 서비스)
ai_services: {
  shape: sql_table
  id: int {constraint: primary_key}
  ai_name: varchar(100)
  ai_description: text
  ai_type: varchar(255)  # LLM, RAG, gpts, prompter, etc.
  ai_status: varchar(20) # active, inactive, pending, deleted
  nationality: varchar(20)
  deleted_at: timestamp
  created_at: timestamp
  updated_at: timestamp
}

# Contents 테이블 (AI로 만든 결과물)
contents: {
  shape: sql_table
  id: int {constraint: primary_key}
  content_title: varchar(200)
  content_description: text
  content_url: varchar(255)
  content_type: varchar(20) # link, logo, image, video, text, audio, pdf, etc.
  content_order_index: int
  content_status: varchar(20) # active, inactive, pending, deleted
  deleted_at: timestamp
  created_at: timestamp
  updated_at: timestamp
}

# Content Categories 테이블 (콘텐츠 카테고리)
content_categories: {
  shape: sql_table
  id: int {constraint: primary_key}
  category_name: varchar(100)
  category_icon: varchar(255)
  category_description: text
  created_at: timestamp
  updated_at: timestamp
}

# Content Tags 테이블 (콘텐츠 태그)
content_tags: {
  shape: sql_table
  id: int {constraint: primary_key}
  tag_name: varchar(100)
  tag_description: text
  created_at: timestamp
  updated_at: timestamp
}

# Expert Contents 테이블 (전문가가 만든 콘텐츠)
expert_contents: {
  shape: sql_table
  id: int {constraint: primary_key}
  expert_id: int {constraint: foreign_key}
  content_id: int {constraint: foreign_key}
  created_at: timestamp
  updated_at: timestamp
}

# Content Category Relations 테이블 (콘텐츠-카테고리 관계)
content_category_relations: {
  shape: sql_table
  id: int {constraint: primary_key}
  content_id: int {constraint: foreign_key}
  category_id: int {constraint: foreign_key}
  created_at: timestamp
  updated_at: timestamp
}

# Content Tag Relations 테이블 (콘텐츠-태그 관계)
content_tag_relations: {
  shape: sql_table
  id: int {constraint: primary_key}
  content_id: int {constraint: foreign_key}
  tag_id: int {constraint: foreign_key}
  created_at: timestamp
  updated_at: timestamp
}

# Expert AI Services 테이블 (전문가가 사용하는 AI 서비스)
expert_ai_services: {
  shape: sql_table
  id: int {constraint: primary_key}
  expert_id: int {constraint: foreign_key}
  ai_service_id: int {constraint: foreign_key}
  usage_description: text
  created_at: timestamp
  updated_at: timestamp
}

# Content AI Services 테이블 (콘텐츠 제작에 사용된 AI 서비스)
content_ai_services: {
  shape: sql_table
  id: int {constraint: primary_key}
  content_id: int {constraint: foreign_key}
  ai_service_id: int {constraint: foreign_key}
  usage_description: text
  created_at: timestamp
  updated_at: timestamp
}

# Matching Requests 테이블 (매칭 요청)
matching_requests: {
  shape: sql_table
  id: int {constraint: primary_key}
  client_id: int {constraint: foreign_key}
  expert_id: int {constraint: foreign_key}
  request_title: varchar(200)
  request_description: text
  request_status: varchar(20) # pending, accepted, rejected, completed
  request_budget: decimal(10,2)
  request_deadline: date
  created_at: timestamp
  updated_at: timestamp
}

# Reviews 테이블 (리뷰)
reviews: {
  shape: sql_table
  id: int {constraint: primary_key}
  client_id: int {constraint: foreign_key}
  expert_id: int {constraint: foreign_key}
  content_id: int {constraint: foreign_key}
  rating: int
  review_text: text
  review_status: varchar(20) # active, hidden, deleted
  created_at: timestamp
  updated_at: timestamp
}

# Content Views 테이블 (콘텐츠 조회 기록)
content_views: {
  shape: sql_table
  id: int {constraint: primary_key}
  content_id: int {constraint: foreign_key}
  user_id: int {constraint: foreign_key}
  view_date: timestamp
  ip_address: varchar(45)
  user_agent: text
  created_at: timestamp
}

# Ranking Weights 테이블 (랭킹 가중치 설정)
ranking_weights: {
  shape: sql_table
  id: int {constraint: primary_key}
  ranking_type: varchar(50) # ai_service, content, expert, category
  weight_name: varchar(100)
  weight_value: decimal(5,3)
  weight_description: text
  is_active: boolean
  created_at: timestamp
  updated_at: timestamp
}

# Rankings 테이블 (랭킹 결과 저장)
rankings: {
  shape: sql_table
  id: int {constraint: primary_key}
  ranking_type: varchar(50) # ai_service, content, expert, category
  entity_id: int
  entity_type: varchar(50) # ai_service_id, content_id, expert_id, category_id
  total_score: decimal(10,3)
  view_count: int
  request_count: int
  avg_rating: decimal(3,2)
  ranking_date: date
  created_at: timestamp
  updated_at: timestamp
}

# 관계 정의
users -> experts
groups -> experts
experts -> expert_contents
contents -> expert_contents
contents -> content_category_relations
content_categories -> content_category_relations
contents -> content_tag_relations
content_tags -> content_tag_relations
experts -> expert_ai_services
ai_services -> expert_ai_services
contents -> content_ai_services
ai_services -> content_ai_services
users -> matching_requests
experts -> matching_requests
users -> reviews
experts -> reviews
contents -> reviews
contents -> content_views
users -> content_views